'use strict';

const {exec} = require('child_process');
const _ = require('lodash');

module.exports = (serverPort) => {
    let logLines = '';
    const errors = [];

    const childProcess = exec(`SERVER_PORT=${serverPort} node src/app.js`, (error) => {
        if (error) {
            errors.push(error);
        }
    });

    childProcess.stdout.on('data', (data) => {
        logLines += data.toString();
    });

    childProcess.on('error', (error) => {
        errors.push(error);
    });

    childProcess.on('exit', (code) => {
        errors.push(new Error(`server exited with status ${code}`));
    });

    const server = {
        clearLogLines: () => {
            logLines = '';
        },
        getErrors: () => errors,
        getLogLines: () => _(logLines)
            .split('\n')
            .map((logLine) => {
                try {
                    return JSON.parse(logLine);
                } catch (error) {
                    return null;
                }
            })
            .compact()
            .value(),
        isReady: () => server.getLogLines().some((line) => line.code === 'server.start'),
        stop: () => childProcess.kill()
    };

    return Promise.resolve(server);
};
